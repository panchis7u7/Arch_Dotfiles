# Set Wireless Wi-fi card.
# -------------------------------------------------
ip link set wlan0 up
iwlist wlan0 scan
# iwconfig wlan0 essid <SSID> key s:<key> (non-wpa)
wpa_passphrase <SSID> <Key> > /etc/<config-filename>
wpa_supplicant -B -i wlan0 -D wext -c /etc/<config-filename>

# UEFI Partitions.
# -------------------------------------------------
# ls /sys/firmware/efi/efivars # If not empty, UEFI is possible.
# Use cfdisk for disk partitions.
mkfs.vfat -F32 /dev/<Block> # EFI.
mkfs.ext4 /dev/<Block>      # / and # Partitions.
mkswap /dev/<Block>
swapon

mount /dev/</-Block> /mnt
mkdir -p /mnt/boot/efi
mount /dev/<efi-block> /mnt/boot/efi
mkdir /mnt/home
mount /dev/<#-Block> /mnt/home

# Base packages installation.
# -------------------------------------------------
pacstrap /mnt linux linux-firmware base nano grub networkmanager dhcpcd efibootmgr
pacstrap /mnt netctl wpa_supplicant dialog

# If signature errors are present, check https://wiki.archlinux.org/title/Pacman/Package_signing#Invalid_signature_errors

# Generate fstab.
# -------------------------------------------------
genfstab /mnt >> /mnt/etc/fstab

# timezone, clock and keyboard layout.
# -------------------------------------------------
arch-chroot /mnt
echo <hostname> > /etc/hostname
# timedatectl list-timezones        # List all available timezones.
ln -sf /usr/share/zoneinfo/America/Mexico_City /etc/localtime
nano /etc/locale.gen
locale-gen
echo KEYMAP=en > /etc/vconsole.conf
echo LANG=en_US.UTF8 > /etc/locale.conf

# GRUB installation with UEFI.
# -------------------------------------------------
grub-install --efi-directory=/boot/efi --bootloader -id='Arch Linux' --target=x86_64-efi
grub-mkconfig -o /boot/grub/grub.cfg

# User config.
# -------------------------------------------------
passwd
useradd -m <user_name>
passwd <user_name>

# Reboot.
# -------------------------------------------------
exit
umount -R /mnt

sudo pacman -S dkms linux-headers sudo
usermod -aG <group> <user>
nano /etc/sudoers
# Uncomment:  
%wheel   ALL=(ALL)   ALL

# Add windows to boot menu.
# -------------------------------------------------
# Uncomment OS-PROBER-DETECTION=FALSE in /etc/default/grub
pacman -S ntfs-3g os-prober
os-prober
grub-mkconfig -o /boot/grub/grub.cfg

# Enable and configure wireless connectivity.
# -------------------------------------------------
systemctl enable NetworkManager
systemctl start NetworkManager
nmcli dev wifi connect <SSID> password <Key>

# Generic Drivers for NVIDIA.
# -------------------------------------------------
# pacman -S xf86-video-vesa
# pacman -S xf86-video-nouveau

# Proprietary Drivers for NVIDIA.
# -------------------------------------------------
# If proprietary drivers are preferred to be installed, blacklist nouveau:
# Create file /usr/lib/modprobe.d/nvidia-installer-disable-nouveau.conf and paste the following
# as the file's content:
blacklist nouveau
options nouveau modeset=0
# Regenerate initramfs:
sudo mkinitcpio -p linux
# You should see loaded the blacklist file with the following:
sudo lsinitcpio /boot/initramfs-linux.img | grep nouveau

# Xorg y mesa.
# -------------------------------------------------
pacman -S xorg-server xorg-xinit mesa mesa-demos net-tools wget
# Install oficial nvidia drivers.
reboot

# Install Qtile.
# -------------------------------------------------
sudo pacman -S lightdm lightdm-gtk-greeter
sudo vim /etc/lightdm/lightdm.conf
# Uncomment greeter-session=example-gtk-gnome
# change to lightdm-gtk-greeter
sudo systemctl enable lightdm
sudo pacman -S qtile xterm code firefox rofi which nitrogen vim accountsservice
sudo pacman -S ttf-dejavu ttf-liberation noto-fonts
sudo pacman -S pulseaudio pavucontrol pamixer
sudo pacman -S arandr udiskie network-manager-applet
sudo pacman -S volumeicon cbatticon xorg-xinit base-devel git thunar ranger glib2 gvfs lxappearance picom geeqie vlc
reboot

# Utilities.
# -------------------------------------------------
sudo pacman -S lsd bat htop bashtop zsh unzip flameshot lftp
# Aliases:
# alias ls="lsd"
# alias cat="bat"

# Config Qtile.
# -------------------------------------------------
sudo pacman -S alacritty screenkey neofetch python-pip python-psutil
#Â Qtile config: /home/<user>/.config/qtile/
# Picom config: /home/<user>/.config/picom/
# Alacritty config: /home/<user>/.config/alacritty/
# To use a custom picom file use:
picom --config ~/.config/picom/picom.conf
# If xprops and xwininfo are not available:
sudo pacman -S xorg-xwininfo xorg-xprop

# Dracula theme.
# -------------------------------------------------
https://draculatheme.com/gtk (And icons)
mv gtk-master ~/.themes/dracula
mv Dracula ~/.icons/dracula
# Then open appareance app.
rofi-theme-selector

# yay installation. AUR packages manager.
# -------------------------------------------------
cd /opt
sudo git clone https://aur.archlinux.org/yay-git.git
sudo chown -R panchis:panchis ./yay-git
cd yay-git
makepkg -si
yay -S nerd-fonts-compl
JetBrainMono ttf => /usr/share/fonts

# Install snap.
# -------------------------------------------------
# udo ln -s /var/lib/snapd/snap /snap
yay -S snapd
https://snapcraft.io/install/code/arch
sudo snap install code --classic
sudo snap install discord

# SDDM.
# -------------------------------------------------
sudo pacman -S sddm
sudo systemctl enable -f sddm
# nano /usr/lib/sddm/sddm.conf.d/default.conf => theme=Sugar-Candy
yay -S sddm-theme-sugar-candy-git
# /usr/share/sddm/themes/Sugar-Candy/theme.conf

# Set timezone.
# -------------------------------------------------
sudo timedatectl set-timezone America/Mexico_City
sudo timedatectl set-ntp true

# Evolution installation.
# -------------------------------------------------
sudo pacman -S evolution gnome-keyring

# Audio drivers.
# -------------------------------------------------
sudo pacman -S alsa-utils
amixer sset Master unmute

# Bluetooth.
# -------------------------------------------------
sudo pacman -S bluez bluez-utils
sudo systemctl enable bluetooth
sudo systemctl start bluetooth

yay -S libxcrypt-compat

# Mount ntfs drives.
# -------------------------------------------------
sudo pacman -S ntfs-3g fuse
mkdir -p /media/<curent_user>/<media_name>
sudo mount -t ntfs-3g /dev/sda2 /media/<curent_user>/<media_name>
# To mount automatically the drive, add this line to /etc/fstab>
# /dev/<drive>        /media/<curent_user>/<media_name>       ntfs    defaults        0       0
